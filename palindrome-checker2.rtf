{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 function palindrome(str) \{\
  let ogText = str.toLowerCase();\
  let text1Reg = /[a-z0-9]/ig;\
  let newWord = ogText.match(text1Reg);\
  for (let i = 0; i <= newWord.length/2; i++) \{\
  let firstLetter = newWord[i];\
  let lastLetter = newWord[newWord.length-(i+1)];\
  if (firstLetter != lastLetter) \{\
    return false;\
  \}\
  \}\
    return true;\
  // match the first to the last\
    // if true, pop both off and continue\
  // repeat until last pair, if all work, return true\
    // if only one character remains, return true\
  // we'll use a regex to alter the text and give us back the base components\
  // we'll set a new variable equal to the text backwards, and .test if it's in the original text; if so, then...\
\}\
\
console.log(palindrome("A man, a plan, a canal. Panama"));}